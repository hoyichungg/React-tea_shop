"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = _default;

function _react() {
  const data = _interopRequireDefault(require("react"));

  _react = function _react() {
    return data;
  };

  return data;
}

function _utils() {
  const data = require("@umijs/utils");

  _utils = function _utils() {
    return data;
  };

  return data;
}

function _path() {
  const data = require("path");

  _path = function _path() {
    return data;
  };

  return data;
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const pkgPathCache = {};
const pkgCache = {}; // 以下依赖不走 babel 编译

const EXCLUDE_PKGS = ['@ant-design/icons', '@babel/runtime', 'bizcharts', 'core-js', 'echarts', 'lodash', 'react', 'react-dom']; // 参考：
// https://github.com/umijs/umi/blob/2.x/packages/af-webpack/src/getWebpackConfig/es5ImcompatibleVersions.js

function _default(opts) {
  const pkgPath = getPkgPath(opts);
  if (pkgPath in pkgCache) return pkgCache[pkgPath];

  const _require = require(pkgPath),
        name = _require.name; // eslint-disable-line


  pkgCache[pkgPath] = isMatch({
    name
  });
  return pkgCache[pkgPath];
}

function getPkgPath(opts) {
  const dir = (0, _path().dirname)(opts.path);
  if (dir in pkgPathCache) return pkgPathCache[dir];
  pkgPathCache[dir] = _utils().pkgUp.sync({
    cwd: opts.path
  });
  return pkgPathCache[dir];
}

function isMatch(opts) {
  return EXCLUDE_PKGS.includes(opts.name);
}