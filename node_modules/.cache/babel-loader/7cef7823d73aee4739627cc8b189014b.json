{"ast":null,"code":"var _jsxFileName = \"/Users/gua/Desktop/tea-shop/src/components/events/RegionAxis.jsx\";\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { toggleFilter } from 'actions/events';\nimport { fetchZones } from 'actions/zones';\nimport VerticalLinkBtn from './VerticalLinkBtn';\nconst Line = styled.div.attrs(props => ({\n  className: 'line'\n}))`\n  margin-top: 30px;\n`;\nconst Zone = styled.div`\n  flex: 1 0;\n  padding-top: 0;\n`;\nconst ZoneItem = styled.div`\n  display: flex;\n  height: 180px;\n  margin-top: -39px;\n  margin-left: -6px;\n`;\nconst ZoneTitle = styled.div`\n  margin-left: 2.5px;\n  margin-right: 5px;\n`;\nconst ZoneContent = styled.div`\n  height: 100%;\n  padding-top: 55px;\n  margin-left: 0;\n`;\n\nfunction RegionAxis({\n  data = [],\n  activeZone,\n  activeVendor,\n  toggleFilter,\n  fetchZones\n}) {\n  useEffect(() => {\n    fetchZones();\n  }, [fetchZones]);\n\n  const mapZone = () => {\n    return data.map(el => {\n      return /*#__PURE__*/React.createElement(Zone, {\n        key: el.zId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ZoneItem, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ZoneTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(VerticalLinkBtn, {\n        onClick: () => toggleFilter('zone', el.zId, el.zone),\n        className: `m-0 ${activeZone == el.zId ? 'active' : ''}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      }, el.zone)), /*#__PURE__*/React.createElement(ZoneContent, {\n        className: \"sy_list sy_list-vertical\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, el.companys.map(item => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: item.id,\n          className: \"list-item\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(VerticalLinkBtn, {\n          className: activeZone == el.zId || activeVendor == item.id ? 'active' : '',\n          onClick: () => toggleFilter('vendor', item.id, item.name),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }\n        }, item.name));\n      }))));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sy_dotline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Line, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, mapZone())));\n}\n\nconst mapStateToProps = ({\n  zones,\n  events\n}) => {\n  const {\n    filterType,\n    filterId\n  } = events;\n  let activeZone = '';\n  let activeVendor = '';\n\n  if (filterType === 'zone') {\n    activeZone = filterId;\n  } else if (filterType === 'vendor') {\n    activeVendor = filterId;\n  }\n\n  return {\n    data: zones,\n    activeZone,\n    activeVendor\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    toggleFilter,\n    fetchZones\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionAxis);","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/src/components/events/RegionAxis.jsx"],"names":["React","useEffect","styled","connect","bindActionCreators","toggleFilter","fetchZones","VerticalLinkBtn","Line","div","attrs","props","className","Zone","ZoneItem","ZoneTitle","ZoneContent","RegionAxis","data","activeZone","activeVendor","mapZone","map","el","zId","zone","companys","item","id","name","mapStateToProps","zones","events","filterType","filterId","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,MAAMC,IAAI,GAAGN,MAAM,CAACO,GAAP,CAAWC,KAAX,CAAiBC,KAAK,KAAK;AACtCC,EAAAA,SAAS,EAAE;AAD2B,CAAL,CAAtB,CAET;;CAFJ;AAMA,MAAMC,IAAI,GAAGX,MAAM,CAACO,GAAI;;;CAAxB;AAKA,MAAMK,QAAQ,GAAGZ,MAAM,CAACO,GAAI;;;;;CAA5B;AAOA,MAAMM,SAAS,GAAGb,MAAM,CAACO,GAAI;;;CAA7B;AAKA,MAAMO,WAAW,GAAGd,MAAM,CAACO,GAAI;;;;CAA/B;;AAMA,SAASQ,UAAT,CAAoB;AAClBC,EAAAA,IAAI,GAAG,EADW;AAElBC,EAAAA,UAFkB;AAGlBC,EAAAA,YAHkB;AAIlBf,EAAAA,YAJkB;AAKlBC,EAAAA;AALkB,CAApB,EAMG;AACDL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU;AACX,GAFQ,EAEN,CAACA,UAAD,CAFM,CAAT;;AAIA,QAAMe,OAAO,GAAG,MAAM;AACpB,WAAOH,IAAI,CAACI,GAAL,CAASC,EAAE,IAAI;AACpB,0BACE,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,EAAE,CAACC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD;AACE,QAAA,OAAO,EAAE,MAAMnB,YAAY,CAAC,MAAD,EAASkB,EAAE,CAACC,GAAZ,EAAiBD,EAAE,CAACE,IAApB,CAD7B;AAEE,QAAA,SAAS,EAAG,OAAMN,UAAU,IAAII,EAAE,CAACC,GAAjB,GAAuB,QAAvB,GAAkC,EAAG,EAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGD,EAAE,CAACE,IAJN,CADF,CADF,eASE,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,0BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,EAAE,CAACG,QAAH,CAAYJ,GAAZ,CAAgBK,IAAI,IAAI;AACvB,4BACE;AAAK,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAf;AAAmB,UAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,eAAD;AACE,UAAA,SAAS,EACPT,UAAU,IAAII,EAAE,CAACC,GAAjB,IAAwBJ,YAAY,IAAIO,IAAI,CAACC,EAA7C,GACI,QADJ,GAEI,EAJR;AAME,UAAA,OAAO,EAAE,MAAMvB,YAAY,CAAC,QAAD,EAAWsB,IAAI,CAACC,EAAhB,EAAoBD,IAAI,CAACE,IAAzB,CAN7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQGF,IAAI,CAACE,IARR,CADF,CADF;AAcD,OAfA,CADH,CATF,CAFF,CADF;AAiCD,KAlCM,CAAP;AAmCD,GApCD;;AAsCA,sBACE,uDACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBR,OAAO,EAAhC,CAFF,CADF,CADF;AAQD;;AAED,MAAMS,eAAe,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KAAuB;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BF,MAAjC;AACA,MAAIb,UAAU,GAAG,EAAjB;AACA,MAAIC,YAAY,GAAG,EAAnB;;AACA,MAAIa,UAAU,KAAK,MAAnB,EAA2B;AACzBd,IAAAA,UAAU,GAAGe,QAAb;AACD,GAFD,MAEO,IAAID,UAAU,KAAK,QAAnB,EAA6B;AAClCb,IAAAA,YAAY,GAAGc,QAAf;AACD;;AACD,SAAO;AAAEhB,IAAAA,IAAI,EAAEa,KAAR;AAAeZ,IAAAA,UAAf;AAA2BC,IAAAA;AAA3B,GAAP;AACD,CAVD;;AAYA,SAASe,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAOhC,kBAAkB,CAAC;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,EAA+B8B,QAA/B,CAAzB;AACD;;AAED,eAAejC,OAAO,CAAC2B,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,UAA7C,CAAf","sourcesContent":["import React, { useEffect } from 'react'\nimport styled from 'styled-components'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { toggleFilter } from 'actions/events'\nimport { fetchZones } from 'actions/zones'\nimport VerticalLinkBtn from './VerticalLinkBtn'\n\nconst Line = styled.div.attrs(props => ({\n  className: 'line',\n}))`\n  margin-top: 30px;\n`\n\nconst Zone = styled.div`\n  flex: 1 0;\n  padding-top: 0;\n`\n\nconst ZoneItem = styled.div`\n  display: flex;\n  height: 180px;\n  margin-top: -39px;\n  margin-left: -6px;\n`\n\nconst ZoneTitle = styled.div`\n  margin-left: 2.5px;\n  margin-right: 5px;\n`\n\nconst ZoneContent = styled.div`\n  height: 100%;\n  padding-top: 55px;\n  margin-left: 0;\n`\n\nfunction RegionAxis({\n  data = [],\n  activeZone,\n  activeVendor,\n  toggleFilter,\n  fetchZones,\n}) {\n  useEffect(() => {\n    fetchZones()\n  }, [fetchZones])\n\n  const mapZone = () => {\n    return data.map(el => {\n      return (\n        <Zone key={el.zId}>\n          <div className=\"dot\" />\n          <ZoneItem>\n            <ZoneTitle>\n              <VerticalLinkBtn\n                onClick={() => toggleFilter('zone', el.zId, el.zone)}\n                className={`m-0 ${activeZone == el.zId ? 'active' : ''}`}\n              >\n                {el.zone}\n              </VerticalLinkBtn>\n            </ZoneTitle>\n            <ZoneContent className=\"sy_list sy_list-vertical\">\n              {el.companys.map(item => {\n                return (\n                  <div key={item.id} className=\"list-item\">\n                    <VerticalLinkBtn\n                      className={\n                        activeZone == el.zId || activeVendor == item.id\n                          ? 'active'\n                          : ''\n                      }\n                      onClick={() => toggleFilter('vendor', item.id, item.name)}\n                    >\n                      {item.name}\n                    </VerticalLinkBtn>\n                  </div>\n                )\n              })}\n            </ZoneContent>\n          </ZoneItem>\n        </Zone>\n      )\n    })\n  }\n\n  return (\n    <>\n      <div className=\"sy_dotline\">\n        <Line />\n        <div className=\"d-flex\">{mapZone()}</div>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ zones, events }) => {\n  const { filterType, filterId } = events\n  let activeZone = ''\n  let activeVendor = ''\n  if (filterType === 'zone') {\n    activeZone = filterId\n  } else if (filterType === 'vendor') {\n    activeVendor = filterId\n  }\n  return { data: zones, activeZone, activeVendor }\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({ toggleFilter, fetchZones }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RegionAxis)\n"]},"metadata":{},"sourceType":"module"}