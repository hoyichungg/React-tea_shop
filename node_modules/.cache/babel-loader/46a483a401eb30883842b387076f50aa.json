{"ast":null,"code":"import { FETCH_FLAVOR, SELECT_BY_FLAVOR, SELECT_BY_TEA } from 'actions/flavor';\nconst defaultState = {\n  targetTeaFlavors: [],\n  flavors: [],\n  teaFlavors: [],\n  selectedFlavor: ''\n};\nexport default function flavor(state = defaultState, action) {\n  const targetId = action.id;\n  let targetTeaFlavors = {};\n\n  switch (action.type) {\n    case FETCH_FLAVOR:\n      return { ...state,\n        ...action.data\n      };\n\n    case SELECT_BY_FLAVOR:\n      targetTeaFlavors = state.teaFlavors.filter(el => {\n        const ary = [el.frontId, el.midId, el.endId];\n        return ary.includes(targetId);\n      });\n      return { ...state,\n        selectedFlavor: targetId,\n        targetTeaFlavors\n      };\n\n    case SELECT_BY_TEA:\n      targetTeaFlavors = [state.teaFlavors.find(el => el.id === targetId)];\n      return { ...state,\n        targetTeaFlavors\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/src/reducers/flavor.js"],"names":["FETCH_FLAVOR","SELECT_BY_FLAVOR","SELECT_BY_TEA","defaultState","targetTeaFlavors","flavors","teaFlavors","selectedFlavor","flavor","state","action","targetId","id","type","data","filter","el","ary","frontId","midId","endId","includes","find"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,gBAAvB,EAAyCC,aAAzC,QAA8D,gBAA9D;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,EADC;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,UAAU,EAAE,EAHO;AAInBC,EAAAA,cAAc,EAAE;AAJG,CAArB;AAOA,eAAe,SAASC,MAAT,CAAgBC,KAAK,GAAGN,YAAxB,EAAsCO,MAAtC,EAA8C;AAC3D,QAAMC,QAAQ,GAAGD,MAAM,CAACE,EAAxB;AACA,MAAIR,gBAAgB,GAAG,EAAvB;;AACA,UAAQM,MAAM,CAACG,IAAf;AACE,SAAKb,YAAL;AACE,aAAO,EACL,GAAGS,KADE;AAEL,WAAGC,MAAM,CAACI;AAFL,OAAP;;AAIF,SAAKb,gBAAL;AACEG,MAAAA,gBAAgB,GAAGK,KAAK,CAACH,UAAN,CAAiBS,MAAjB,CAAwBC,EAAE,IAAI;AAC/C,cAAMC,GAAG,GAAG,CAACD,EAAE,CAACE,OAAJ,EAAaF,EAAE,CAACG,KAAhB,EAAuBH,EAAE,CAACI,KAA1B,CAAZ;AACA,eAAOH,GAAG,CAACI,QAAJ,CAAaV,QAAb,CAAP;AACD,OAHkB,CAAnB;AAIA,aAAO,EACL,GAAGF,KADE;AAELF,QAAAA,cAAc,EAAEI,QAFX;AAGLP,QAAAA;AAHK,OAAP;;AAKF,SAAKF,aAAL;AACEE,MAAAA,gBAAgB,GAAG,CAACK,KAAK,CAACH,UAAN,CAAiBgB,IAAjB,CAAsBN,EAAE,IAAIA,EAAE,CAACJ,EAAH,KAAUD,QAAtC,CAAD,CAAnB;AACA,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA;AAFK,OAAP;;AAIF;AACE,aAAOK,KAAP;AAvBJ;AAyBD","sourcesContent":["import { FETCH_FLAVOR, SELECT_BY_FLAVOR, SELECT_BY_TEA } from 'actions/flavor'\n\nconst defaultState = {\n  targetTeaFlavors: [],\n  flavors: [],\n  teaFlavors: [],\n  selectedFlavor: ''\n}\n\nexport default function flavor(state = defaultState, action) {\n  const targetId = action.id\n  let targetTeaFlavors = {}\n  switch (action.type) {\n    case FETCH_FLAVOR:\n      return {\n        ...state,\n        ...action.data\n      }\n    case SELECT_BY_FLAVOR:\n      targetTeaFlavors = state.teaFlavors.filter(el => {\n        const ary = [el.frontId, el.midId, el.endId]\n        return ary.includes(targetId)\n      })\n      return {\n        ...state,\n        selectedFlavor: targetId,\n        targetTeaFlavors\n      }\n    case SELECT_BY_TEA:\n      targetTeaFlavors = [state.teaFlavors.find(el => el.id === targetId)]\n      return {\n        ...state,\n        targetTeaFlavors\n      }\n    default:\n      return state\n  }\n}\n"]},"metadata":{},"sourceType":"module"}