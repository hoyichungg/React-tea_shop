{"ast":null,"code":"(function () {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n      // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String) message = utf8.stringToBytes(message);else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message)) message = Array.prototype.slice.call(message, 0);else if (!Array.isArray(message)) message = message.toString(); // otherwise assume byte array\n\n    var m = crypt.bytesToWords(message),\n        l = message.length * 8,\n        w = [],\n        H0 = 1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 = 271733878,\n        H4 = -1009589776; // Padding\n\n    m[l >> 5] |= 0x80 << 24 - l % 32;\n    m[(l + 64 >>> 9 << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n        if (j < 16) w[j] = m[i + j];else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = n << 1 | n >>> 31;\n        }\n        var t = (H0 << 5 | H0 >>> 27) + H4 + (w[j] >>> 0) + (j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 : j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 : j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 : (H1 ^ H2 ^ H3) - 899497514);\n        H4 = H3;\n        H3 = H2;\n        H2 = H1 << 30 | H1 >>> 2;\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n      // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes : options && options.asString ? bin.bytesToString(digestbytes) : crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n  module.exports = api;\n})();","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/node_modules/sha1/sha1.js"],"names":["crypt","require","utf8","bin","sha1","message","constructor","String","stringToBytes","Buffer","isBuffer","Array","prototype","slice","call","isArray","toString","m","bytesToWords","l","length","w","H0","H1","H2","H3","H4","i","a","b","c","d","e","j","n","t","api","options","digestbytes","wordsToBytes","asBytes","asString","bytesToString","bytesToHex","_blocksize","_digestsize","module","exports"],"mappings":"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","sourcesContent":["(function() {\n  var crypt = require('crypt'),\n      utf8 = require('charenc').utf8,\n      bin = require('charenc').bin,\n\n  // The core\n  sha1 = function (message) {\n    // Convert to byte array\n    if (message.constructor == String)\n      message = utf8.stringToBytes(message);\n    else if (typeof Buffer !== 'undefined' && typeof Buffer.isBuffer == 'function' && Buffer.isBuffer(message))\n      message = Array.prototype.slice.call(message, 0);\n    else if (!Array.isArray(message))\n      message = message.toString();\n\n    // otherwise assume byte array\n\n    var m  = crypt.bytesToWords(message),\n        l  = message.length * 8,\n        w  = [],\n        H0 =  1732584193,\n        H1 = -271733879,\n        H2 = -1732584194,\n        H3 =  271733878,\n        H4 = -1009589776;\n\n    // Padding\n    m[l >> 5] |= 0x80 << (24 - l % 32);\n    m[((l + 64 >>> 9) << 4) + 15] = l;\n\n    for (var i = 0; i < m.length; i += 16) {\n      var a = H0,\n          b = H1,\n          c = H2,\n          d = H3,\n          e = H4;\n\n      for (var j = 0; j < 80; j++) {\n\n        if (j < 16)\n          w[j] = m[i + j];\n        else {\n          var n = w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16];\n          w[j] = (n << 1) | (n >>> 31);\n        }\n\n        var t = ((H0 << 5) | (H0 >>> 27)) + H4 + (w[j] >>> 0) + (\n                j < 20 ? (H1 & H2 | ~H1 & H3) + 1518500249 :\n                j < 40 ? (H1 ^ H2 ^ H3) + 1859775393 :\n                j < 60 ? (H1 & H2 | H1 & H3 | H2 & H3) - 1894007588 :\n                         (H1 ^ H2 ^ H3) - 899497514);\n\n        H4 = H3;\n        H3 = H2;\n        H2 = (H1 << 30) | (H1 >>> 2);\n        H1 = H0;\n        H0 = t;\n      }\n\n      H0 += a;\n      H1 += b;\n      H2 += c;\n      H3 += d;\n      H4 += e;\n    }\n\n    return [H0, H1, H2, H3, H4];\n  },\n\n  // Public API\n  api = function (message, options) {\n    var digestbytes = crypt.wordsToBytes(sha1(message));\n    return options && options.asBytes ? digestbytes :\n        options && options.asString ? bin.bytesToString(digestbytes) :\n        crypt.bytesToHex(digestbytes);\n  };\n\n  api._blocksize = 16;\n  api._digestsize = 20;\n\n  module.exports = api;\n})();\n"]},"metadata":{},"sourceType":"script"}