{"ast":null,"code":"var _jsxFileName = \"/Users/gua/Desktop/tea-shop/src/components/flavor/MenuInfo.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { selectByTea } from 'actions/flavor';\n\nfunction MenuInfo({\n  flavors,\n  targetTeaFlavors,\n  selectByTea\n}) {\n  const isOnly = targetTeaFlavors.length === 1 ? true : false;\n\n  const renderList = () => {\n    return /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, targetTeaFlavors.map(el => /*#__PURE__*/React.createElement(\"li\", {\n      key: el.id,\n      className: \"link-btn mb-3\",\n      onClick: () => selectByTea(el.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-leaf mr-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }), el.name)));\n  };\n\n  const renderInfo = () => {\n    const target = targetTeaFlavors[0];\n    flavors.forEach(el => el.outerflavors.forEach(el => {\n      if (el.id === target.frontId) {\n        target.front = el.name;\n      } else if (el.id === target.midId) {\n        target.mid = el.name;\n      } else if (el.id === target.endId) {\n        target.end = el.name;\n      }\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"pl-0 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fs-sm\",\n      style: {\n        padding: '0px 3px',\n        color: 'white',\n        borderRadius: '3px',\n        backgroundColor: 'rgb(160, 201, 153)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"\\u524D\\u9999\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2 text-ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, target.front), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1 mb-0 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, target.frontText)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fs-sm\",\n      style: {\n        padding: '0px 3px',\n        color: 'white',\n        borderRadius: '3px',\n        backgroundColor: 'rgb(220, 183, 148)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"\\u4E2D\\u5473\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2 text-ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, target.mid), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1 mb-0 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, target.midText)), /*#__PURE__*/React.createElement(\"li\", {\n      className: \"mb-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fs-sm\",\n      style: {\n        padding: '0px 3px',\n        color: 'white',\n        borderRadius: '3px',\n        backgroundColor: 'rgb(172, 159, 150)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"\\u5F8C\\u97FB\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"ml-2 text-ff\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, target.end), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mt-1 mb-0 ml-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, target.endText))), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, target.intro));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 10\n    }\n  }, isOnly ? renderInfo() : renderList());\n}\n\nconst mapStateToProps = ({\n  flavor\n}) => {\n  return { ...flavor\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    selectByTea\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuInfo);","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/src/components/flavor/MenuInfo.jsx"],"names":["React","connect","bindActionCreators","selectByTea","MenuInfo","flavors","targetTeaFlavors","isOnly","length","renderList","map","el","id","name","renderInfo","target","forEach","outerflavors","frontId","front","midId","mid","endId","end","padding","color","borderRadius","backgroundColor","frontText","midText","endText","intro","mapStateToProps","flavor","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { selectByTea } from 'actions/flavor'\n\nfunction MenuInfo({ flavors, targetTeaFlavors, selectByTea }) {\n  const isOnly = targetTeaFlavors.length === 1 ? true : false\n\n  const renderList = () => {\n    return (\n      <ul>\n        {targetTeaFlavors.map(el => (\n          <li\n            key={el.id}\n            className=\"link-btn mb-3\"\n            onClick={() => selectByTea(el.id)}\n          >\n            <i class=\"fas fa-leaf mr-2\"></i>\n            {el.name}\n          </li>\n        ))}\n      </ul>\n    )\n  }\n  const renderInfo = () => {\n    const target = targetTeaFlavors[0]\n    flavors.forEach(el =>\n      el.outerflavors.forEach(el => {\n        if (el.id === target.frontId) {\n          target.front = el.name\n        } else if (el.id === target.midId) {\n          target.mid = el.name\n        } else if (el.id === target.endId) {\n          target.end = el.name\n        }\n      })\n    )\n    return (\n      <div className=\"ml-5\">\n        <ul className=\"pl-0 mb-4\">\n          <li className=\"mb-2\">\n            <span\n              className=\"fs-sm\"\n              style={{\n                padding: '0px 3px',\n                color: 'white',\n                borderRadius: '3px',\n                backgroundColor: 'rgb(160, 201, 153)',\n              }}\n            >\n              前香\n            </span>\n            <span className=\"ml-2 text-ff\">{target.front}</span>\n            <p className=\"mt-1 mb-0 ml-3\">{target.frontText}</p>\n          </li>\n          <li className=\"mb-2\">\n            <span\n              className=\"fs-sm\"\n              style={{\n                padding: '0px 3px',\n                color: 'white',\n                borderRadius: '3px',\n                backgroundColor: 'rgb(220, 183, 148)',\n              }}\n            >\n              中味\n            </span>\n            <span className=\"ml-2 text-ff\">{target.mid}</span>\n            <p className=\"mt-1 mb-0 ml-3\">{target.midText}</p>\n          </li>\n          <li className=\"mb-2\">\n            <span\n              className=\"fs-sm\"\n              style={{\n                padding: '0px 3px',\n                color: 'white',\n                borderRadius: '3px',\n                backgroundColor: 'rgb(172, 159, 150)',\n              }}\n            >\n              後韻\n            </span>\n            <span className=\"ml-2 text-ff\">{target.end}</span>\n            <p className=\"mt-1 mb-0 ml-3\">{target.endText}</p>\n          </li>\n        </ul>\n        <p>{target.intro}</p>\n      </div>\n    )\n  }\n\n  return <div>{isOnly ? renderInfo() : renderList()}</div>\n}\n\nconst mapStateToProps = ({ flavor }) => {\n  return { ...flavor }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ selectByTea }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuInfo)\n"]},"metadata":{},"sourceType":"module"}