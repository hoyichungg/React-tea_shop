{"ast":null,"code":"var _jsxFileName = \"/Users/gua/Desktop/tea-shop/src/pages/Product.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport Slider from '@material-ui/core/Slider';\nimport ProductCard from 'components/pj_event/productCard';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { setTeaFilter, setPriceFilter, fetchProducts, setInputFilter } from 'actions/products';\nimport InputRange from 'react-input-range';\nimport 'react-input-range/lib/css/index.css';\nconst teaType = [{\n  id: 1,\n  name: '果韻蜜香紅'\n}, {\n  id: 2,\n  name: '正欉鐵觀音'\n}, {\n  id: 3,\n  name: '奶香金萱'\n}, {\n  id: 4,\n  name: '清香四季春'\n}, {\n  id: 5,\n  name: '日月潭紅玉'\n}, {\n  id: 6,\n  name: '蘭香翠玉'\n}, {\n  id: 7,\n  name: '阿薩姆紅茶'\n}, {\n  id: 8,\n  name: '東方美人茶'\n}, {\n  id: 7,\n  name: '烏龍茶'\n}];\n\nfunction Product({\n  filterTea,\n  setTeaFilter,\n  setPriceFilter,\n  setInputFilter,\n  fetchProducts,\n  data\n}) {\n  const [total, setTotal] = useState([]);\n  const [priceRange, setPriceRange] = useState({\n    min: 0,\n    max: 1000\n  });\n  const [input, setInput] = useState(''); // 注意資料格式要設定，伺服器才知道是json格式\n\n  async function getDataFromServer() {\n    // 開啟載入指示\n    // setDataLoading(true)\n    const request = new Request('http://localhost:3333/product/try-get', {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'appliaction/json'\n      })\n    });\n    const response = await fetch(request);\n    const data = await response.json(); // 設定資料\n\n    setTotal(data); // return data\n  } // 一開始就會開始載入資料\n\n\n  useEffect(() => {\n    fetchProducts();\n  }, []);\n  useEffect(() => {\n    setPriceFilter(priceRange);\n  }, [priceRange]);\n  useEffect(() => {\n    setInputFilter(input);\n  }, [input]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"pj_border-bottom-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"\\u7522\\u54C1\\u5217\\u8868\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row no-gutters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pj_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pj_container-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group has-search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa fa-search form-control-feedback\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Search\",\n    value: input,\n    onChange: e => setInput(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(InputRange, {\n    maxValue: 1000,\n    minValue: 0,\n    value: priceRange,\n    onChange: value => setPriceRange(value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pj_cart-tea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-2 pl-1 fs-lg text-ff\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"\\u8336\\u7A2E\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pj_container-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, teaType.map(el => {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => setTeaFilter(el.id),\n      className: `mb-1 mr-1 link-btn ${filterTea == el.id ? 'active' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 23\n      }\n    }, el.name);\n  })))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-deck row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, data ? data.map(el => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: el.id,\n      className: \"col-4 mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(ProductCard, {\n      product: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }));\n  }) : '')));\n}\n\nconst mapStateToProps = ({\n  products\n}) => {\n  const {\n    filterTea,\n    data,\n    priceRange,\n    inputFilter\n  } = products;\n  let filterData = data; // 茶種篩選\n\n  if (filterTea) {\n    filterData = filterData.filter(el => el.tag == filterTea);\n  } // 字串搜尋\n\n\n  if (inputFilter) {\n    filterData = filterData.filter(el => el.title.includes(inputFilter));\n  } // 價格區間\n\n\n  filterData = filterData.filter(el => {\n    return el.price > priceRange.min && el.price < priceRange.max;\n  });\n  return {\n    filterTea,\n    data: filterData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    setTeaFilter,\n    fetchProducts,\n    setPriceFilter,\n    setInputFilter\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Product));","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/src/pages/Product.jsx"],"names":["React","useState","useEffect","withRouter","Slider","ProductCard","connect","bindActionCreators","setTeaFilter","setPriceFilter","fetchProducts","setInputFilter","InputRange","teaType","id","name","Product","filterTea","data","total","setTotal","priceRange","setPriceRange","min","max","input","setInput","getDataFromServer","request","Request","method","headers","Headers","Accept","response","fetch","json","e","target","value","map","el","mapStateToProps","products","inputFilter","filterData","filter","tag","title","includes","price","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport Slider from '@material-ui/core/Slider'\nimport ProductCard from 'components/pj_event/productCard'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport {\n  setTeaFilter,\n  setPriceFilter,\n  fetchProducts,\n  setInputFilter,\n} from 'actions/products'\nimport InputRange from 'react-input-range'\nimport 'react-input-range/lib/css/index.css'\n\nconst teaType = [\n  {\n    id: 1,\n    name: '果韻蜜香紅',\n  },\n  {\n    id: 2,\n    name: '正欉鐵觀音',\n  },\n  {\n    id: 3,\n    name: '奶香金萱',\n  },\n  {\n    id: 4,\n    name: '清香四季春',\n  },\n  {\n    id: 5,\n    name: '日月潭紅玉',\n  },\n  {\n    id: 6,\n    name: '蘭香翠玉',\n  },\n  {\n    id: 7,\n    name: '阿薩姆紅茶',\n  },\n  {\n    id: 8,\n    name: '東方美人茶',\n  },\n  {\n    id: 7,\n    name: '烏龍茶',\n  },\n]\n\nfunction Product({\n  filterTea,\n  setTeaFilter,\n  setPriceFilter,\n  setInputFilter,\n  fetchProducts,\n  data,\n}) {\n  const [total, setTotal] = useState([])\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 1000 })\n  const [input, setInput] = useState('')\n  // 注意資料格式要設定，伺服器才知道是json格式\n  async function getDataFromServer() {\n    // 開啟載入指示\n    // setDataLoading(true)\n\n    const request = new Request('http://localhost:3333/product/try-get', {\n      method: 'GET',\n      headers: new Headers({\n        Accept: 'application/json',\n        'Content-Type': 'appliaction/json',\n      }),\n    })\n\n    const response = await fetch(request)\n    const data = await response.json()\n    // 設定資料\n    setTotal(data)\n    // return data\n  }\n\n  // 一開始就會開始載入資料\n  useEffect(() => {\n    fetchProducts()\n  }, [])\n\n  useEffect(() => {\n    setPriceFilter(priceRange)\n  }, [priceRange])\n\n  useEffect(() => {\n    setInputFilter(input)\n  }, [input])\n\n  return (\n    <>\n      <div className=\"container\">\n        <h1 className=\"pj_border-bottom-product\">產品列表</h1>\n        <div className=\"mb-4\">\n          <div className=\"row no-gutters\">\n            <div className=\"col-md-6\">\n              <div className=\"pj_box\">\n                <div className=\"pj_container-1\">\n                  <div className=\"form-group has-search\">\n                    <span className=\"fa fa-search form-control-feedback\"></span>\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Search\"\n                      value={input}\n                      onChange={e => setInput(e.target.value)}\n                    />\n                  </div>\n                </div>\n                <InputRange\n                  maxValue={1000}\n                  minValue={0}\n                  value={priceRange}\n                  onChange={value => setPriceRange(value)}\n                />\n                {/* <div className=\"d-flex\">\n                  <p style={{ paddingRight: '10px' }}>price</p>\n                  <input\n                    className=\"pj_input-color\"\n                    type=\"number\"\n                    value={value[0]}\n                    style={{ height: '25px', width: '80px' }}\n                    disabled\n                  />\n\n                  <input\n                    className=\"pj_input-color\"\n                    type=\"number\"\n                    value={value[1]}\n                    style={{ height: '25px', width: '80px' }}\n                    disabled\n                  />\n                </div> */}\n                {/* <div className=\"d-flex\">\n                  <Slider\n                    max={9999}\n                    min={0}\n                    value={value}\n                    valueLabelDisplay=\"auto\"\n                    aria-labelledby=\"range-slider\"\n                    onChange={handleChange}\n                    getAriaValueText={valuetext}\n                    valueLabelFormat={valuetext}\n                  />\n                </div> */}\n              </div>\n            </div>\n\n            <div className=\"col-md-6 \">\n              <div className=\"pj_cart-tea\">\n                <p className=\"mb-2 pl-1 fs-lg text-ff\">茶種</p>\n                <div className=\"pj_container-button\">\n                  {teaType.map(el => {\n                    return (\n                      <button\n                        type=\"button\"\n                        onClick={() => setTeaFilter(el.id)}\n                        className={`mb-1 mr-1 link-btn ${\n                          filterTea == el.id ? 'active' : ''\n                        }`}\n                      >\n                        {el.name}\n                      </button>\n                    )\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"card-deck row\">\n          {data\n            ? data.map(el => {\n                return (\n                  <div key={el.id} className=\"col-4 mb-4\">\n                    <ProductCard product={el} />\n                  </div>\n                )\n              })\n            : ''}\n        </div>\n      </div>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ products }) => {\n  const { filterTea, data, priceRange, inputFilter } = products\n  let filterData = data\n  // 茶種篩選\n  if (filterTea) {\n    filterData = filterData.filter(el => el.tag == filterTea)\n  }\n  // 字串搜尋\n  if (inputFilter) {\n    filterData = filterData.filter(el => el.title.includes(inputFilter))\n  }\n  // 價格區間\n  filterData = filterData.filter(el => {\n    return el.price > priceRange.min && el.price < priceRange.max\n  })\n\n  return { filterTea, data: filterData }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    { setTeaFilter, fetchProducts, setPriceFilter, setInputFilter },\n    dispatch\n  )\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Product))\n"]},"metadata":{},"sourceType":"module"}