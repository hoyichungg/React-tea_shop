{"ast":null,"code":"var _jsxFileName = \"/Users/gua/Desktop/tea-shop/src/pages/Event.jsx\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { fetchEvents } from 'actions/events';\nimport { fetchCompanys } from 'actions/companys';\nimport PageTitle from 'utils/PageTitle';\nimport EventInfo from 'components/event/EventInfo';\nimport Menu from 'components/event/Menu';\nimport RegistForm from 'components/event/RegistForm';\nimport RegisterModal from 'components/event/RegisterModal';\n\nfunction Event({\n  event = {},\n  companyEvents,\n  fetchEvents,\n  fetchCompanys\n}) {\n  var _event$companys;\n\n  useEffect(() => {\n    fetchEvents();\n    fetchCompanys();\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"pt-4 pt-lg-6 pb-4 pb-lg-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    lg: \"1\",\n    className: \"offset-xl-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, (_event$companys = event.companys) === null || _event$companys === void 0 ? void 0 : _event$companys.username)), /*#__PURE__*/React.createElement(Col, {\n    lg: \"3\",\n    xl: \"2\",\n    className: \"mb-3 text-center-lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    data: companyEvents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    lg: \"7\",\n    xl: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(EventInfo, Object.assign({}, event, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(RegistForm, Object.assign({}, event, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(RegisterModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })));\n}\n\nconst mapStateToProps = ({\n  events\n}, {\n  match\n}) => {\n  const {\n    params\n  } = match;\n  let cId = '';\n  let companyEvents = [];\n  let event = {};\n\n  for (let i = 0; i < ((_events$data = events.data) === null || _events$data === void 0 ? void 0 : _events$data.length); i++) {\n    var _events$data;\n\n    const el = events.data[i];\n\n    if (el.id.toString() === params.id.toString()) {\n      event = el;\n      cId = event.cId;\n    }\n  }\n\n  events.data.forEach(el => {\n    if (el.cId.toString() === cId.toString()) {\n      companyEvents.push(el);\n    }\n  });\n  return {\n    event,\n    companyEvents\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({\n    fetchEvents,\n    fetchCompanys\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Event));","map":{"version":3,"sources":["/Users/gua/Desktop/tea-shop/src/pages/Event.jsx"],"names":["React","useEffect","withRouter","connect","bindActionCreators","Container","Row","Col","fetchEvents","fetchCompanys","PageTitle","EventInfo","Menu","RegistForm","RegisterModal","Event","event","companyEvents","companys","username","mapStateToProps","events","match","params","cId","i","data","length","el","id","toString","forEach","push","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { fetchEvents } from 'actions/events'\nimport { fetchCompanys } from 'actions/companys'\nimport PageTitle from 'utils/PageTitle'\nimport EventInfo from 'components/event/EventInfo'\nimport Menu from 'components/event/Menu'\nimport RegistForm from 'components/event/RegistForm'\nimport RegisterModal from 'components/event/RegisterModal'\n\nfunction Event({ event = {}, companyEvents, fetchEvents, fetchCompanys }) {\n  useEffect(() => {\n    fetchEvents()\n    fetchCompanys()\n  }, [])\n  return (\n    <>\n      <Container fluid className=\"pt-4 pt-lg-6 pb-4 pb-lg-7\">\n        <Row>\n          <Col lg=\"1\" className=\"offset-xl-1\">\n            <PageTitle>{event.companys?.username}</PageTitle>\n          </Col>\n          <Col lg=\"3\" xl=\"2\" className=\"mb-3 text-center-lg\">\n            <Menu data={companyEvents} />\n          </Col>\n          <Col lg=\"7\" xl=\"6\">\n            <EventInfo {...event} />\n            <RegistForm {...event} />\n          </Col>\n        </Row>\n        <RegisterModal />\n      </Container>\n    </>\n  )\n}\n\nconst mapStateToProps = ({ events }, { match }) => {\n  const { params } = match\n  let cId = ''\n  let companyEvents = []\n  let event = {}\n  for (let i = 0; i < events.data?.length; i++) {\n    const el = events.data[i]\n    if (el.id.toString() === params.id.toString()) {\n      event = el\n      cId = event.cId\n    }\n  }\n  events.data.forEach(el => {\n    if (el.cId.toString() === cId.toString()) {\n      companyEvents.push(el)\n    }\n  })\n  return { event, companyEvents }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators({ fetchEvents, fetchCompanys }, dispatch)\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Event))\n"]},"metadata":{},"sourceType":"module"}